# DSpace-CRIS 5.x.x Continuous Integration/Build via GitHub Actions
# based on DSpace 5.x
name: Build

# Run this Build only for pushes / PRs to dspace-6.x branch
on:
  push:
    branches: dspace-5_x_x-cris
  pull_request:
    branches: dspace-5_x_x-cris

jobs:
  tests:
    runs-on: ubuntu-18.04
    env:
      # Give Maven 1GB of memory to work with
      # Suppress all Maven "downloading" messages in Travis logs (see https://stackoverflow.com/a/35653426)
      # This also slightly speeds builds, as there is less logging
      MAVEN_OPTS: "-Xmx2048M -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    # These are the actual CI steps to perform per job
    steps:
      # https://github.com/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v1

      # https://github.com/actions/setup-java
      - name: Install JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      # https://github.com/actions/cache
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          # Cache entire ~/.m2/repository
          path: ~/.m2/repository
          # Cache key is hash of all pom.xml files. Therefore any changes to POMs will invalidate cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # [Build & Unit Test] Check source code licenses and run source code Unit Tests
      #   license:check => Validate all source code license headers
      #   -Dmaven.test.skip=false => Enable DSpace Unit Tests
      #   -DskipITs=false         => Enable DSpace Integration Tests
      #   -P !assembly            => Skip normal assembly (as it can be memory intensive)
      #   -B => Maven batch/non-interactive mode (recommended for CI)
      #   -V => Display Maven version info before build
      #   -Dsurefire.rerunFailingTestsCount=2 => try again for flaky tests, and keep track of/report on number of retries
      - name: Run Maven Build 
        run: mvn clean package license:check -Dmaven.test.skip=true -DskipITs=true -P !assembly -B -V


