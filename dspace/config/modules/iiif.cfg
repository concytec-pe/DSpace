#---------------------------------------------------------------#
#-----------------IIIF CONFIGURATIONS---------------------------#
#---------------------------------------------------------------#
# Configuration properties used by the IIIF viewer integration  #
#---------------------------------------------------------------#
image.server.url = ${iiif.image.server.url}

image.server.valid-formats = JPEG, GIF, image/png, TIFF

image.server.storage.base-path = ${dspace.dir}/iiif-image-storage
image.server.storage.thumbnail-path = ${dspace.dir}/iiif-image-storage-thumbnail
image.server.storage.preview-path = ${dspace.dir}/iiif-image-storage-preview
image.server.storage.folder = ${iiif.image.server.folder}

image.server.link-extension.required = ${iiif.image.server.link-extension.required}
image.server.link-filepath.separator = ${iiif.image.server.link-filepath.separator}

pdf-image.server.url = ${iiif.pdf-image.server.url}
image.server.pdf-valid-formats = Adobe PDF
image.server.link = ${iiif.image.server.link}
image.force.info-json = ${iiif.image.force.info-json}

# Resolution (dpi) of the extracted images
pdf2image.resolution = 400
pdf2image.colorspace.pdftoimagecmyk = CMYK
pdf2image.colorspace.pdftoimagergb = RGB

customerID = ${solr.multicorePrefix}

ocr.server.url = ${iiif.wa.server.url}/${solr.multicorePrefix}
autocomplete.server.url = ${iiif.autocomplete.server.url}/${solr.multicorePrefix}
search.server.url = ${iiif.search.server.url}/${solr.multicorePrefix}
imagemagick-convert-path = ${iiif.imagemagick-convert-path}
# ImageMagick convert process takes about 1GB of disk space with 10 pages per process, the disk space augment linearly with the 10 pages blocks
pdf2image.imagemagick-pagerange = 10
pdf2image.imagemagick-convert-format = png

raw-valid-formats = Nikon Image RAW, Canon Image RAW
raw.imagemagick-convert-format = png
raw.resolution = 300

pdfimages-convert-path = ${iiif.pdfimages-convert-path}
pdfimages-outputformat = -tiff -j -jp2

# IIIFPDFMultipagesCurationTask configuration
image.max-width = 600
image.max-height = 400
# default false; set to true to build the low definition images even they already exist
#cleanandgenerate.low-definition-images = true
# default false; set to true to build the PDF even it already exists
#cleanandgenerate.multipages-pdf = true

### UV viewer download configuration ###
# define default and collection configurations to specify download options available
# the configuration must contain one of these values:
# - "no" means that no download option is available
# - "single-image" means that download options of current image(s) at different resolutions are available
# - "alternative" means that only download options of alternative files (e.g. multipages pdf) are available
# - "all" means that all download options are available
# you can specify a default configuration
viewer.uv.download.default = all
# you can specify a configuration for all items inside a collection
#viewer.uv.download.123456789/2 = no
